{\rtf1\ansi\ansicpg932\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 // /api/webhook.js \'97 Apparel flow (existing) + Illustration + Canvas Art + LINE Stamps\
// Runtime: Vercel Node Functions (ESM)\
\
import crypto from "crypto";\
\
/* ===========================\
 *  Env / Constants\
 * =========================== */\
\
// \uc0\u20844 \u38283 \u35377 \u21487 \u65288 \u35504 \u12391 \u12418 \u65289 \
const ALLOW_IDS = [];\
\
// \uc0\u38745 \u30340 \u30011 \u20687 \u12398 \u12505 \u12540 \u12473 URL\
const PUBLIC_BASE =\
  (process.env.PUBLIC_BASE_URL || "https://line-webhook-eta.vercel.app")\
    .trim()\
    .replace(/\\/+$/, "");\
\
// Square\uc0\u65288 production / sandbox\u65289 \
const SQUARE_API_BASE =\
  (process.env.SQUARE_ENV || "production") === "sandbox"\
    ? "https://connect.squareupsandbox.com"\
    : "https://connect.squareup.com";\
\
/* ===========================\
 *  Apparel: \uc0\u20849 \u36890 \u65288 \u26082 \u23384 \u12398 \u12414 \u12414 \u65289 \
 * =========================== */\
\
// \uc0\u36215 \u21205 \u12527 \u12540 \u12489 \u65288 \u12381 \u12398 \u12414 \u12414 \u65289 \
const START_TRIGGERS = new Set(["#limited", "\uc0\u26032 \u21830 \u21697 &\u26399 \u38291 \u38480 \u23450 \u21830 \u21697 ", "\u26032 \u21830 \u21697 \u65286 \u26399 \u38291 \u38480 \u23450 \u21830 \u21697 ", "\u38480 \u23450 "]);\
\
// \uc0\u12469 \u12452 \u12474 \u30011 \u20687 \u12420 \u33394 \u12394 \u12393 \u65288 \u26082 \u23384 \u65289 \
const TSHIRT_COLOR_HERO = "/hansode_tshirts_color1.png";\
const TSHIRT_SIDE_HERO  = "/print_front_back.png";\
const TSHIRT_OPTION_HERO = "/option_name2.png";\
\
// \uc0\u12458 \u12503 \u12471 \u12519 \u12531 \u65288 \u25991 \u23383 \u20837 \u12428 \u65289 \
const OPTION_KEY   = "text";\
const OPTION_LABEL = "\uc0\u25991 \u23383 \u20837 \u12428 \u65288 \u65291 400\u20870 \u65289 ";\
const OPTION_PRICE = 400;\
\
// \uc0\u12503 \u12522 \u12531 \u12488 \u38754 \u65288 \u26082 \u23384 \u65289 \
const SIDE_BY_PRODUCT = \{\
  tshirt_premium: [\
    \{ v: "front", label: "\uc0\u21069 \u38754 " \},\
    \{ v: "back", label: "\uc0\u24460 \u38754 " \},\
    \{ v: "both", label: "\uc0\u20001 \u38754 \u12503 \u12522 \u12531 \u12488 \u65306 \u65291 2000\u20870 ", add: 2000 \}\
  ],\
  lsl_premium: [\
    \{ v: "front", label: "\uc0\u21069 \u38754 " \},\
    \{ v: "back", label: "\uc0\u24460 \u38754 " \},\
    \{ v: "both", label: "\uc0\u20001 \u38754 \u12503 \u12522 \u12531 \u12488 \u65306 \u65291 2000\u20870 ", add: 2000 \}\
  ],\
  sweat: [\
    \{ v: "front", label: "\uc0\u21069 \u38754 " \},\
    \{ v: "back", label: "\uc0\u24460 \u38754 " \},\
    \{ v: "both", label: "\uc0\u20001 \u38754 \u12503 \u12522 \u12531 \u12488 \u65306 \u65291 2000\u20870 ", add: 2000 \}\
  ],\
  tote_s: [\
    \{ v: "single", label: "\uc0\u29255 \u38754 " \},\
    \{ v: "both", label: "\uc0\u20001 \u38754 \u12503 \u12522 \u12531 \u12488 \u65306 \u65291 2000\u20870 ", add: 2000 \}\
  ],\
  tote_m_wide: [\
    \{ v: "single", label: "\uc0\u29255 \u38754 " \},\
    \{ v: "both", label: "\uc0\u20001 \u38754 \u12503 \u12522 \u12531 \u12488 \u65306 \u65291 2000\u20870 ", add: 2000 \}\
  ],\
  tote_m_tall: [\
    \{ v: "single", label: "\uc0\u29255 \u38754 " \},\
    \{ v: "both", label: "\uc0\u20001 \u38754 \u12503 \u12522 \u12531 \u12488 \u65306 \u65291 2000\u20870 ", add: 2000 \}\
  ]\
\};\
\
/* ===========================\
 *  NEW: \uc0\u21830 \u21697 \u12459 \u12479 \u12525 \u12464 \
 *  \uc0\u65288 \u12450 \u12497 \u12524 \u12523 \u12399 \u20385 \u26684 \u12384 \u12369 \u20181 \u27096 \u12395 \u21512 \u12431 \u12379 \u12390 \u26356 \u26032 \u65289 \
 * =========================== */\
const CATALOG = \{\
  // \uc0\u26082 \u23384 \u12450 \u12497 \u12524 \u12523 \u65288 \u20385 \u26684 \u12399 \u12372 \u25351 \u23450 \u12398 \u21106 \u24341 \u24460 \u12395 \u26356 \u26032 \u65289 \
  tshirt_premium: \{\
    label: "\uc0\u12503 \u12524 \u12511 \u12450 \u12512 T\u12471 \u12515 \u12484 ",\
    basePrice: 3300, // \'a54,400 \uc0\u8594  \'a53,300\
    img: "/hansode_tshirts_main_1.png",\
    sizeImg: "/hansodetshirts_size_1.png",\
    sideImg: "/hansode_tshirts_print_front_back1.png",\
    colors: ["white", "gray", "baby_pink"],\
    sizes: ["kids120", "XS", "S", "M", "L", "XL", "XXL"]\
  \},\
  lsl_premium: \{\
    label: "\uc0\u12503 \u12524 \u12511 \u12450 \u12512 \u38263 \u34966 T\u12471 \u12515 \u12484 ",\
    basePrice: 3900, // \'a54,800 \uc0\u8594  \'a53,900\
    img: "/long_tshirts_main_1.png",\
    sizeImg: "/longtshirts_size_1.png",\
    sideImg: "/long_tshirts_print_front_back.png",\
    colors: ["white"],\
    sizes: ["S", "M", "L", "XL", "XXL"]\
  \},\
  tote_s: \{\
    label: "\uc0\u12488 \u12540 \u12488 \u12496 \u12483 \u12464 S",\
    basePrice: 3000,\
    img: "/toteback_s_main_1.png",\
    sideImg: "/toteback_s_print_front_back1.png",\
    colors: ["natural"],\
    sizes: []\
  \},\
  tote_m_wide: \{\
    label: "\uc0\u12488 \u12540 \u12488 \u12496 \u12483 \u12464 M\u65288 \u27178 \u38263 \u65289 ",\
    basePrice: 3200,\
    img: "/toteback_m_main_1.png",\
    sideImg: "/toteback_m_print_front_back_1.png",\
    colors: ["natural"],\
    sizes: []\
  \},\
  tote_m_tall: \{\
    label: "\uc0\u12488 \u12540 \u12488 \u12496 \u12483 \u12464 M\u65288 \u32294 \u38263 \u65289 ",\
    basePrice: 3200,\
    img: "/toteback_L_main_1.png",\
    sideImg: "/toteback_L_print_front_back_1.png",\
    colors: ["natural"],\
    sizes: []\
  \},\
  sweat: \{\
    label: "\uc0\u12473 \u12454 \u12455 \u12483 \u12488 ",\
    basePrice: 5400,\
    img: "/sweat_main_1.png",\
    sizeImg: "/sweats_size_1.png",\
    sideImg: "/sweat_print_front_back.png",\
    colors: ["gray"],\
    sizes: ["M", "L", "XL", "XXL"]\
  \},\
\
  /* ---------- NEW: \uc0\u26144 \u12360 \u12527 \u12531  / \u26144 \u12360 \u12491 \u12515 \u12531 \u65288 \u12452 \u12521 \u12473 \u12488 \u65289  ---------- */\
  illustration: \{\
    label: "\uc0\u26144 \u12360 \u12527 \u12531 /\u26144 \u12360 \u12491 \u12515 \u12531 \u65288 \u12506 \u12483 \u12488 \u12398 \u12452 \u12521 \u12473 \u12488 \u35069 \u20316 \u65289 ",\
    basePrice: 2000, // 1\uc0\u21305 \u12398 \u22522 \u26412 \u20385 \u26684 \
    img: "/illustration_main.png",\
    // \uc0\u12459 \u12473 \u12479 \u12512 \u29992 \u12501 \u12521 \u12464 \
    _type: "illustration"\
  \},\
\
  /* ---------- NEW: \uc0\u12461 \u12515 \u12531 \u12496 \u12473 \u12450 \u12540 \u12488  ---------- */\
  canvas_art: \{\
    label: "\uc0\u12461 \u12515 \u12531 \u12496 \u12473 \u12450 \u12540 \u12488 ",\
    basePrice: 5400, // 1\uc0\u26522 \u12398 \u22522 \u26412 \u20385 \u26684 \
    img: "/canvas_main.png",\
    _type: "canvas_art"\
  \},\
\
  /* ---------- NEW: \uc0\u24859 \u29356 LINE\u12473 \u12479 \u12531 \u12503  ---------- */\
  line_stamp: \{\
    label: "\uc0\u24859 \u29356 LINE\u12473 \u12479 \u12531 \u12503 ",\
    basePrice: 0,\
    img: "/linestamp_hero.png",\
    _type: "line_stamp"\
  \}\
\};\
\
/* ===========================\
 *  Illustration: \uc0\u20385 \u26684 \u34920 \u65288 \u38957 \u25968 \u27573 \u38542 \u65289 \
 * =========================== */\
const ILL_PET_COUNT_TIERS = \{\
  1: 0,\
  2: 1500,\
  3: 2800,\
  4: 4100,\
  5: 5400\
\};\
// 6\uc0\u21305 \u20197 \u19978 \u12399 \u35201 \u30456 \u35527 \u65288 UI\u19978 \u12399 \u12316 5\u12289 6\u12399 \u27880 \u24847 \u21914 \u36215 \u65289 \
\
const ILL_COMPOSE_CHOICES = [\
  \{ v: "one_per_image", label: "1\uc0\u26522 \u12398 \u12452 \u12521 \u12473 \u12488 \u12395 1\u21305 " \},\
  \{ v: "multi_per_image", label: "1\uc0\u26522 \u12398 \u12452 \u12521 \u12473 \u12488 \u12395 \u35079 \u25968 \u21305 " \}\
];\
const ILL_STYLE_CHOICES = [\
  \{ v: "art", label: "\uc0\u12450 \u12540 \u12488 \u31995 " \},\
  \{ v: "cute", label: "\uc0\u12363 \u12431 \u12356 \u12356 \u31995 " \},\
  \{ v: "emblem", label: "\uc0\u12456 \u12531 \u12502 \u12524 \u12512 \u31995 " \}\
];\
const ILL_RATIO_CHOICES = [\
  \{ v: "9_16", label: "\uc0\u32294 \u38263  9:16" \},\
  \{ v: "16_9", label: "\uc0\u27178 \u38263  16:9" \},\
  \{ v: "1_1", label: "\uc0\u27491 \u26041 \u24418  1:1" \}\
];\
\
/* ===========================\
 *  Canvas Art: \uc0\u26522 \u25968 \u27573 \u38542  + \u12458 \u12503 \u12471 \u12519 \u12531 \
 * =========================== */\
// 1\uc0\u26522 \u12399  base \u12384 \u12369 \u12289 2\u26522 \u12316 \u12399 \u36861 \u21152 \u37329 \
const CANVAS_ADDER_BY_QTY = \{\
  1: 0,\
  2: 4800,\
  3: 9300,\
  4: 13800\
\};\
const CANVAS_SOURCE_CHOICES = [\
  \{ v: "photo", label: "\uc0\u12362 \u25345 \u12385 \u12398 \u20889 \u30495 " \},\
  \{ v: "own_illust", label: "\uc0\u12362 \u25345 \u12385 \u12398 \u12452 \u12521 \u12473 \u12488 " \},\
  \{ v: "new_illust", label: "\uc0\u26032 \u35215 \u21046 \u20316 \u12452 \u12521 \u12473 \u12488 \u65288 \u21029 \u36884 \u12372 \u27880 \u25991 \u12367 \u12384 \u12373 \u12356 \u65289 " \}\
];\
const CANVAS_OPTION_KEY = "canvas_edit";\
const CANVAS_OPTION_LABEL = "\uc0\u30011 \u20687 \u12398 \u21152 \u24037 /\u25991 \u23383 \u20837 \u12428 \u65288 \u65291 400\u20870 \u65289 ";\
\
/* ===========================\
 *  LINE Stamp: \uc0\u12497 \u12483 \u12463 \u12539 \u38957 \u25968 \u12539 \u25522 \u36617 \u21487 \u21542 \
 * =========================== */\
const STAMP_PACKS = [\
  \{ v: "p8",   label: "\uc0\u12362 \u35430 \u12375 \u12497 \u12483 \u12463  8\u20491 ",  price: 4800, count: 8 \},\
  \{ v: "p16",  label: "\uc0\u12383 \u12387 \u12407 \u12426 \u12497 \u12483 \u12463  16\u20491 ", price: 8200, count: 16 \},\
  \{ v: "all",  label: "\uc0\u20840 \u37096 \u35440 \u12417 \u12497 \u12483 \u12463 ",      price: 10800, count: 0 \}, // \u20491 \u25968 \u12399 \u34920 \u31034 \u12398 \u12415 \
  \{ v: "rep8", label: "\uc0\u12522 \u12500 \u12540 \u12488 \u36861 \u21152  8\u20491 ",    price: 3800, count: 8 \}\
];\
const STAMP_PET_SURCHARGE = [\
  \{ n: 1, add: 0 \},\
  \{ n: 2, add: 500 \},\
  \{ n: 3, add: 1000 \}\
];\
const STAMP_PUBLISH_CHOICES = [\
  \{ v: "ok", label: "\uc0\u25522 \u36617 OK" \},\
  \{ v: "ng", label: "\uc0\u25522 \u36617 NG" \}\
];\
\
/* ===========================\
 *  Sessions\
 * =========================== */\
// userId -> \{\
//   step,\
//   order:[\{product, ...apparel fields..., custom: \{...\}\}], // custom \uc0\u12399  illustration / canvas_art / line_stamp \u29992 \
//   pending:\{...\},\
//   customer:\{name, phone, postal, address1, address2\}\
// \}\
const sessions = new Map();\
\
/* ===========================\
 *  Handler\
 * =========================== */\
export default async function handler(req, res) \{\
  if (req.method === "GET") return res.status(200).json(\{ ok: true, ts: Date.now() \});\
  if (req.method !== "POST") return res.status(200).send("OK");\
\
  // Verify\
  const sig = req.headers["x-line-signature"];\
  const raw = req.body ? JSON.stringify(req.body) : "";\
  if (!raw || !sig) return res.status(200).send("OK");\
  try \{\
    const hmac = crypto\
      .createHmac("sha256", process.env.LINE_CHANNEL_SECRET || "")\
      .update(raw)\
      .digest("base64");\
    if (hmac !== sig) return res.status(200).send("OK");\
  \} catch \{\
    return res.status(200).send("OK");\
  \}\
\
  const events = req.body?.events ?? [];\
  for (const ev of events) \{\
    const userId = ev.source?.userId;\
    if (!userId) continue;\
\
    try \{\
      // whoami\
      if (ev.type === "message" && ev.message?.type === "text") \{\
        const rawTxt = ev.message.text || "";\
        const norm = normalizeText(rawTxt);\
        if (rawTxt.trim().toLowerCase() === "whoami") \{\
          await reply(ev.replyToken, [\{ type: "text", text: `your userId:\\n$\{userId\}` \}]);\
          continue;\
        \}\
        if (START_TRIGGERS.has(norm)) \{\
          const s0 = newSession();\
          sessions.set(userId, s0);\
          s0.step = "pick_product";\
          await askPickProduct(ev.replyToken, "\uc0\u12354 \u12426 \u12364 \u12392 \u12358 \u12372 \u12374 \u12356 \u12414 \u12377 \u12290 \u21830 \u21697 \u12434 \u12362 \u36984 \u12403 \u12367 \u12384 \u12373 \u12356 \u12290 ");\
          continue;\
        \}\
      \}\
\
      const s = sessions.get(userId) || newSession();\
\
      // ===== Text =====\
      if (ev.type === "message" && ev.message?.type === "text") \{\
        const txt = (ev.message.text || "").trim();\
\
        // \uc0\u20837 \u37329 \u36899 \u32097 \
        const allowVague = s.step === "bank";\
        if (isPaidMessage(txt, \{ allowVague \})) \{\
          await reply(ev.replyToken, [\{ type: "text", text: "\uc0\u12354 \u12426 \u12364 \u12392 \u12358 \u12372 \u12374 \u12356 \u12414 \u12377 \u12290 \u20837 \u37329 \u30906 \u35469 \u24460 \u12289 \u21046 \u20316 /\u25163 \u37197 \u12434 \u38283 \u22987 \u12375 \u12414 \u12377 \u12290 " \}]);\
          await push(userId, [\{ type: "text", text: buildCustomerConfirmationText(s) \}]);\
          const admins = (process.env.ADMIN_USER_IDS || "").split(",").map(x=>x.trim()).filter(Boolean);\
          for (const adminId of admins) \{\
            await push(adminId, [\{ type: "text", text: buildAdminConfirmationText(userId, s) \}]);\
          \}\
          s.step = "completed";\
          sessions.set(userId, s);\
          continue;\
        \}\
\
        // \uc0\u12362 \u23458 \u27096 \u24773 \u22577 \u20837 \u21147 \
        if (s.step === "ask_customer_name") \{\
          s.customer.name = txt;\
          s.step = "ask_customer_phone"; sessions.set(userId, s);\
          await askCustomerPhone(ev.replyToken); continue;\
        \}\
        if (s.step === "ask_customer_phone") \{\
          s.customer.phone = txt.replace(/[^\\d]/g, "");\
          s.step = "ask_customer_postal"; sessions.set(userId, s);\
          await askCustomerPostal(ev.replyToken); continue;\
        \}\
        if (s.step === "ask_customer_postal") \{\
          s.customer.postal = txt.replace(/[^\\d]/g, "");\
          s.step = "ask_customer_address1"; sessions.set(userId, s);\
          await askCustomerAddress1(ev.replyToken); continue;\
        \}\
        if (s.step === "ask_customer_address1") \{\
          s.customer.address1 = txt;\
          s.step = "ask_customer_address2"; sessions.set(userId, s);\
          await askCustomerAddress2(ev.replyToken); continue;\
        \}\
        if (s.step === "ask_customer_address2") \{\
          s.customer.address2 = txt === "\uc0\u12394 \u12375 " ? "" : txt;\
          s.step = "confirm_customer"; sessions.set(userId, s);\
\
          await reply(ev.replyToken, [\
            \{\
              type: "flex",\
              altText: "\uc0\u12372 \u27880 \u25991 \u25511 \u12360 ",\
              contents: confirmationBubble(\{\
                title: "\uc0\u12372 \u27880 \u25991 \u20869 \u23481 \u12398 \u30906 \u35469 ",\
                orderText: orderSummaryAll(s),\
                customer: s.customer\
              \})\
            \},\
            \{\
              type: "flex",\
              altText: "\uc0\u30906 \u35469 ",\
              contents: buttonListBubble(\
                CATALOG[s.order[0]?.product || "tshirt_premium"].img,\
                "\uc0\u19978 \u35352 \u12398 \u12362 \u23458 \u27096 \u24773 \u22577 \u12391 \u12424 \u12429 \u12375 \u12356 \u12391 \u12377 \u12363 \u65311 ",\
                [\
                  ["OK\uc0\u65288 \u27770 \u28168 \u12408 \u36914 \u12416 \u65289 ", "cust_ok=yes"],\
                  ["\uc0\u20462 \u27491 \u65288 \u26368 \u21021 \u12363 \u12425 \u65289 ", "cust_ok=no"]\
                ]\
              )\
            \}\
          ]);\
          continue;\
        \}\
      \}\
\
      // ===== Image: \uc0\u12469 \u12452 \u12524 \u12531 \u12488 \u21463 \u20449  =====\
      if (ev.type === "message" && ev.message?.type === "image") \{ continue; \}\
\
      // ===== Postback =====\
      if (ev.type === "postback") \{\
        const data = ev.postback?.data || "";\
\
        // \uc0\u21830 \u21697 \u36984 \u25246 \
        if (data.startsWith("product=")) \{\
          const key = data.split("=")[1];\
          const p = CATALOG[key];\
          if (!p) \{ await reply(ev.replyToken, [\{ type: "text", text: "\uc0\u21830 \u21697 \u12364 \u35211 \u12388 \u12363 \u12426 \u12414 \u12379 \u12435 \u12391 \u12375 \u12383 \u12290 " \}]); continue; \}\
\
          // \uc0\u20998 \u23696 \u65306 \u12459 \u12473 \u12479 \u12512 \u31995  or \u26082 \u23384 \u12450 \u12497 \u12524 \u12523 \u31995 \
          if (p._type === "illustration") \{\
            s.step = "ill_petcount"; s.pending = \{ product: key, custom: \{\} \}; sessions.set(userId, s);\
            await askIllustrationPetCount(ev.replyToken);\
            continue;\
          \}\
          if (p._type === "canvas_art") \{\
            s.step = "canvas_qty"; s.pending = \{ product: key, custom: \{\} \}; sessions.set(userId, s);\
            await askCanvasQty(ev.replyToken);\
            continue;\
          \}\
          if (p._type === "line_stamp") \{\
            s.step = "stamp_pack"; s.pending = \{ product: key, custom: \{\} \}; sessions.set(userId, s);\
            await askStampPack(ev.replyToken);\
            continue;\
          \}\
\
          // \uc0\u26082 \u23384 \u12450 \u12497 \u12524 \u12523 \u31995 \u65306 \u25968 \u37327 \u12363 \u12425 \
          s.pending = \{ product: key, quantity: 0, currentIndex: 0, items: [] \};\
          s.step = "ask_quantity"; sessions.set(userId, s);\
          await reply(ev.replyToken, [\
            \{ type: "text", text: `$\{p.label\} \uc0\u12391 \u12377 \u12397 \u12290 ` \},\
            \{\
              type: "flex",\
              altText: "\uc0\u25968 \u37327 \u36984 \u25246 ",\
              contents: buttonListBubble(p.img, "\uc0\u12372 \u36092 \u20837 \u28857 \u25968 \u12434 \u36984 \u25246 \u12375 \u12390 \u12367 \u12384 \u12373 \u12356 ", [\
                ["1\uc0\u28857 ", "qty=1"],["2\u28857 ", "qty=2"],["3\u28857 ", "qty=3"],["4\u28857 ", "qty=4"],["5\u28857 ", "qty=5"]\
              ])\
            \}\
          ]);\
          continue;\
        \}\
\
        /* ---------- \uc0\u26082 \u23384 \u12450 \u12497 \u12524 \u12523 \u12398 \u20998 \u23696 \u65288 \u25968 \u37327 \u8594 \u21508 \u31278 \u36984 \u25246 \u65289  ---------- */\
        if (data.startsWith("qty=") && s.pending && !CATALOG[s.pending.product]._type) \{\
          const q = Math.max(1, Math.min(5, parseInt(data.split("=")[1], 10) || 1));\
          s.pending.quantity = q;\
          s.pending.items = Array.from(\{ length: q \}, () => newItemState());\
          s.pending.currentIndex = 0;\
          s.step = "pick_campaign_item"; sessions.set(userId, s);\
          await reply(ev.replyToken, [\
            \{ type: "text", text: q === 1 ? "\uc0\u12354 \u12426 \u12364 \u12392 \u12358 \u12372 \u12374 \u12356 \u12414 \u12377 \u12290 \u27425 \u12395 \u12486 \u12540 \u12510 \u12434 \u12362 \u36984 \u12403 \u12367 \u12384 \u12373 \u12356 \u12290 " : `\u12354 \u12426 \u12364 \u12392 \u12358 \u12372 \u12374 \u12356 \u12414 \u12377 \u12290 \u12414 \u12378 \u12399 1\u28857 \u30446 \u12398 \u12486 \u12540 \u12510 \u12434 \u12362 \u36984 \u12403 \u12367 \u12384 \u12373 \u12356 \u12290 ` \},\
            \{ type: "flex", altText: "\uc0\u12461 \u12515 \u12531 \u12506 \u12540 \u12531 \u36984 \u25246 ", contents: campaignSelector() \}\
          ]);\
          continue;\
        \}\
\
        if (data.startsWith("campaign=") && s.pending && !CATALOG[s.pending.product]._type) \{\
          const cid = data.split("=")[1];\
          const camp = CAMPAIGNS[cid];\
          ensurePending(s, s.pending?.product || s.order.at(-1)?.product || "tshirt_premium");\
          if (!camp) \{\
            await reply(ev.replyToken, [\
              \{ type: "text", text: "\uc0\u12461 \u12515 \u12531 \u12506 \u12540 \u12531 \u12364 \u35211 \u12388 \u12363 \u12426 \u12414 \u12379 \u12435 \u12391 \u12375 \u12383 \u12290 \u12418 \u12358 \u19968 \u24230 \u12362 \u36984 \u12403 \u12367 \u12384 \u12373 \u12356 \u12290 " \},\
              \{ type: "flex", altText: "\uc0\u12461 \u12515 \u12531 \u12506 \u12540 \u12531 \u36984 \u25246 ", contents: campaignSelector() \}\
            ]);\
            continue;\
          \}\
          const msg = setChoice(currentItem(s).campaign, cid, "\uc0\u12486 \u12540 \u12510 ", camp.label);\
          s.step = "pick_variation_item"; sessions.set(userId, s);\
          await reply(ev.replyToken, [\
            ...(msg ? [\{ type: "text", text: msg \}] : []),\
            \{ type: "flex", altText: "\uc0\u12496 \u12522 \u12456 \u12540 \u12471 \u12519 \u12531 \u36984 \u25246 ", contents: variationSelectorForCampaign(cid) \}\
          ]);\
          continue;\
        \}\
\
        if (data.startsWith("variation=") && s.pending && !CATALOG[s.pending.product]._type) \{\
          const vid = data.split("=")[1];\
          const v = VARIATIONS[vid];\
          if (!v) \{\
            const cid = currentItem(s)?.campaign?.value;\
            await reply(ev.replyToken, [\
              \{ type: "text", text: "\uc0\u12496 \u12522 \u12456 \u12540 \u12471 \u12519 \u12531 \u12364 \u35211 \u12388 \u12363 \u12426 \u12414 \u12379 \u12435 \u12391 \u12375 \u12383 \u12290 \u12418 \u12358 \u19968 \u24230 \u12362 \u36984 \u12403 \u12367 \u12384 \u12373 \u12356 \u12290 " \},\
              \{ type: "flex", altText: "\uc0\u12496 \u12522 \u12456 \u12540 \u12471 \u12519 \u12531 \u36984 \u25246 ", contents: variationSelectorForCampaign(cid) \}\
            ]);\
            continue;\
          \}\
          const msg = setChoice(currentItem(s).variation, vid, "\uc0\u12496 \u12522 \u12456 \u12540 \u12471 \u12519 \u12531 ", v.label);\
          await gotoColorSizeSideOrOption(ev.replyToken, s, userId, msg); continue;\
        \}\
\
        if (data.startsWith("color=") && s.pending && !CATALOG[s.pending.product]._type) \{\
          const color = data.split("=")[1];\
          const msg = setChoice(currentItem(s).color, color, "\uc0\u12459 \u12521 \u12540 ", colorLabel(color));\
          await gotoColorSizeSideOrOption(ev.replyToken, s, userId, msg); continue;\
        \}\
\
        if (data.startsWith("size=") && s.pending && !CATALOG[s.pending.product]._type) \{\
          const size = data.split("=")[1];\
          const item = currentItem(s); const prod = s.pending.product; const p = CATALOG[prod];\
          if (prod === "tshirt_premium" && size === "kids120" && item.color?.value !== "white") \{\
            s.step = "pick_color_item"; sessions.set(userId, s);\
            await reply(ev.replyToken, [\
              \{ type: "text", text: "\uc0\u23376 \u20379 \u29992 120\u12399 \u30333 \u12398 \u12415 \u23550 \u24540 \u12391 \u12377 \u12290 \u12459 \u12521 \u12540 \u12434 \u30333 \u12395 \u22793 \u26356 \u12375 \u12390 \u12367 \u12384 \u12373 \u12356 \u12290 " \},\
              \{ type: "flex", altText: "\uc0\u12459 \u12521 \u12540 \u36984 \u25246 ", contents: buttonListBubble(p.img, "\u12459 \u12521 \u12540 \u12434 \u36984 \u25246 ", p.colors.map(c=>[colorLabel(c), `color=$\{c\}`])) \}\
            ]);\
            continue;\
          \}\
          const msg = setChoice(item.size, size, "\uc0\u12469 \u12452 \u12474 ", sizeLabel(size));\
          await gotoColorSizeSideOrOption(ev.replyToken, s, userId, msg); continue;\
        \}\
\
        if (data.startsWith("side=") && s.pending && !CATALOG[s.pending.product]._type) \{\
          const side = data.split("=")[1];\
          const msg = setChoice(currentItem(s).side, side, "\uc0\u12503 \u12522 \u12531 \u12488 \u38754 ", sideLabel(s.pending.product, side));\
          s.step = "pick_opts_item"; sessions.set(userId, s);\
          await sendOptionsAndNextItem(ev.replyToken, s, msg); continue;\
        \}\
\
        if (data.startsWith("optset=") && s.pending && !CATALOG[s.pending.product]._type) \{\
          const payload = data.split("=")[1]; // optset=text:on / off\
          const [key, val] = payload.split(":");\
          const item = currentItem(s);\
          if (key === OPTION_KEY) \{\
            const had = item.opts.has(OPTION_KEY);\
            let msg = null;\
            if (val === "on" && !had) \{ msg = item.optionFirst ? `\uc0\u12458 \u12503 \u12471 \u12519 \u12531 \u12300 $\{OPTION_LABEL\}\u12301 \u12364 \u36984 \u25246 \u12373 \u12428 \u12414 \u12375 \u12383 \u12290 ` : `\u12458 \u12503 \u12471 \u12519 \u12531 \u12434 \u12300 $\{OPTION_LABEL\}\u12301 \u12395 \u22793 \u26356 \u12375 \u12414 \u12375 \u12383 \u12290 `; item.opts.add(OPTION_KEY); item.optionFirst = false; \}\
            else if (val === "off" && had) \{ msg = item.optionFirst ? `\uc0\u12458 \u12503 \u12471 \u12519 \u12531 \u12300 $\{OPTION_LABEL\}\u12301 \u12364 \u36984 \u25246 \u12373 \u12428 \u12414 \u12375 \u12383 \u12290 ` : `\u12458 \u12503 \u12471 \u12519 \u12531 \u12300 $\{OPTION_LABEL\}\u12301 \u12434 \u22806 \u12375 \u12414 \u12375 \u12383 \u12290 `; item.opts.delete(OPTION_KEY); item.optionFirst = false; \}\
            await finalizeCurrentItem(ev.replyToken, s, userId, msg); continue;\
          \}\
        \}\
\
        if (data.startsWith("addmore=") && s.step === "ask_additional") \{\
          const ans = data.split("=")[1];\
          if (ans === "yes") \{ s.step = "pick_product"; sessions.set(userId, s); await askPickProduct(ev.replyToken, "\uc0\u12354 \u12426 \u12364 \u12392 \u12358 \u12372 \u12374 \u12356 \u12414 \u12377 \u12290 \u36861 \u21152 \u12398 \u21830 \u21697 \u12434 \u12362 \u36984 \u12403 \u12367 \u12384 \u12373 \u12356 \u12290 "); continue; \}\
          s.step = "confirm_all"; sessions.set(userId, s);\
          await reply(ev.replyToken, [\
            \{ type: "text", text: orderSummaryAll(s) \},\
            \{\
              type: "flex",\
              altText: "\uc0\u27880 \u25991 \u30906 \u35469 ",\
              contents: buttonListBubble(\
                CATALOG[s.order[0]?.product || "tshirt_premium"].img,\
                "\uc0\u19978 \u35352 \u12398 \u20869 \u23481 \u12391 \u27880 \u25991 \u12375 \u12414 \u12377 \u12363 \u65311 ",\
                [["\uc0\u12399 \u12356 \u65288 \u12362 \u23458 \u27096 \u24773 \u22577 \u12398 \u20837 \u21147 \u12408 \u65289 ","confirm=yes"],["\u20462 \u27491 \u12377 \u12427 \u65288 \u26368 \u21021 \u12363 \u12425 \u65289 ","confirm=no"]]\
              )\
            \}\
          ]);\
          continue;\
        \}\
\
        if (data.startsWith("confirm=") && s.step === "confirm_all") \{\
          const ans = data.split("=")[1];\
          if (ans === "no") \{ resetSession(s); sessions.set(userId, s); s.step="pick_product"; await askPickProduct(ev.replyToken, "\uc0\u12399 \u12376 \u12417 \u12363 \u12425 \u12420 \u12426 \u30452 \u12375 \u12414 \u12377 \u12290 \u21830 \u21697 \u12434 \u12362 \u36984 \u12403 \u12367 \u12384 \u12373 \u12356 \u12290 "); continue; \}\
          s.customer = \{\}; s.step = "ask_customer_name"; sessions.set(userId, s); await askCustomerName(ev.replyToken); continue;\
        \}\
\
        if (data === "cust_ok=yes" && s.step === "confirm_customer") \{\
          s.step = "pick_pay"; sessions.set(userId, s);\
          await reply(ev.replyToken, [\
            \{ type: "text", text: orderSummaryAll(s) \},\
            \{\
              type: "flex",\
              altText: "\uc0\u27770 \u28168 \u26041 \u27861 \u12398 \u36984 \u25246 ",\
              contents: buttonListBubble(CATALOG[s.order[0]?.product || "tshirt_premium"].img, "\uc0\u27770 \u28168 \u26041 \u27861 \u12434 \u36984 \u25246 \u12375 \u12390 \u12367 \u12384 \u12373 \u12356 ", [\
                ["\uc0\u12463 \u12524 \u12472 \u12483 \u12488 \u12459 \u12540 \u12489 \u65288 Square\u65289 ","pay=card"],\
                ["\uc0\u21475 \u24231 \u25391 \u36796 ","pay=bank"]\
              ])\
            \}\
          ]);\
          continue;\
        \}\
        if (data === "cust_ok=no" && s.step === "confirm_customer") \{\
          s.step = "ask_customer_name"; sessions.set(userId, s); await askCustomerName(ev.replyToken); continue;\
        \}\
\
        if (data.startsWith("pay=") && s.step === "pick_pay") \{\
          const method = data.split("=")[1];\
          if (method === "bank") \{\
            s.step = "bank"; sessions.set(userId, s);\
            await reply(ev.replyToken, [\{\
              type: "text",\
              text: [\
                "\uc0\u12304 \u37504 \u34892 \u25391 \u36796 \u12398 \u12372 \u26696 \u20869 \u12305 ",\
                "\uc0\u37504 \u34892 \u21517 \u65306 \u22810 \u25705 \u20449 \u29992 \u37329 \u24235  / \u20843 \u29579 \u23376 \u20013 \u22830 \u25903 \u24215 ",\
                "\uc0\u21475 \u24231 \u31278 \u21029 \u65306 \u26222 \u36890 \u12288 \u21475 \u24231 \u30058 \u21495 \u65306 0286023",\
                "\uc0\u21475 \u24231 \u21517 \u32681 \u65306 \u12511 \u12474 \u12514 \u12488 \u12459 \u12474 \u12458 ",\
                "\uc0\u8251 \u12362 \u25391 \u36796 \u24460 \u12289 \u12371 \u12398 \u12488 \u12540 \u12463 \u12391 \u12300 \u20837 \u37329 \u28168 \u12415 \u12301 \u12392 \u12362 \u30693 \u12425 \u12379 \u12367 \u12384 \u12373 \u12356 \u12290 "\
              ].join("\\n")\
            \}]);\
            continue;\
          \}\
          if (method === "card") \{\
            const items = buildSquareLineItems(s);\
            const link = await createSquarePaymentLink(\{ items, referenceId: userId \});\
            if (!link) \{\
              await reply(ev.replyToken, [\{ type: "text", text: "\uc0\u27770 \u28168 \u12522 \u12531 \u12463 \u12398 \u20316 \u25104 \u12395 \u22833 \u25943 \u12375 \u12414 \u12375 \u12383 \u12290 \u26178 \u38291 \u12434 \u12362 \u12356 \u12390 \u20877 \u24230 \u12362 \u35430 \u12375 \u12367 \u12384 \u12373 \u12356 \u12290 " \}]);\
              continue;\
            \}\
            s.step = "waiting_payment"; sessions.set(userId, s);\
            await reply(ev.replyToken, [\
              \{ type: "text", text: `\uc0\u12371 \u12385 \u12425 \u12363 \u12425 \u27770 \u28168 \u12375 \u12390 \u12367 \u12384 \u12373 \u12356 \u65306 \\n$\{link\}` \},\
              \{ type: "text", text: "\uc0\u27770 \u28168 \u23436 \u20102 \u24460 \u12395 \u12371 \u12398 \u12488 \u12540 \u12463 \u12408 \u25147 \u12387 \u12390 \u12365 \u12390 \u12367 \u12384 \u12373 \u12356 \u12290 \\n\u23436 \u20102 \u12375 \u12383 \u12425 \u12300 \u20837 \u37329 \u28168 \u12415 \u12301 \u12392 \u36865 \u12387 \u12390 \u12367 \u12384 \u12373 \u12356 \u12290 " \}\
            ]);\
            continue;\
          \}\
        \}\
\
        /* ===========================\
         *  NEW: Illustration \uc0\u12501 \u12525 \u12540 \
         * =========================== */\
        if (data.startsWith("ill_pet=") && s.pending?.product === "illustration") \{\
          const n = parseInt(data.split("=")[1], 10);\
          const clamp = Math.max(1, Math.min(6, n || 1));\
          s.pending.custom.petCount = clamp;\
          s.step = "ill_compose"; sessions.set(userId, s);\
          await askIllustrationCompose(ev.replyToken, clamp);\
          continue;\
        \}\
        if (data.startsWith("ill_compose=") && s.pending?.product === "illustration") \{\
          const v = data.split("=")[1];\
          s.pending.custom.compose = v;\
          s.step = "ill_style"; sessions.set(userId, s);\
          await askIllustrationStyle(ev.replyToken);\
          continue;\
        \}\
        if (data.startsWith("ill_style=") && s.pending?.product === "illustration") \{\
          const v = data.split("=")[1];\
          s.pending.custom.style = v;\
          s.step = "ill_option"; sessions.set(userId, s);\
          await askIllustrationOption(ev.replyToken);\
          continue;\
        \}\
        if (data.startsWith("ill_opt=") && s.pending?.product === "illustration") \{\
          const on = data.split("=")[1] === "on";\
          s.pending.custom.textAdd = !!on;\
          s.step = "ill_ratio"; sessions.set(userId, s);\
          await askIllustrationRatio(ev.replyToken);\
          continue;\
        \}\
        if (data.startsWith("ill_ratio=") && s.pending?.product === "illustration") \{\
          const v = data.split("=")[1];\
          s.pending.custom.ratio = v;\
\
          // 1\uc0\u20214 \u12392 \u12375 \u12390 \u30906 \u23450 \
          const p = CATALOG["illustration"];\
          const amount = calcIllustrationAmount(s.pending.custom);\
          s.order.push(\{\
            product: "illustration",\
            campaign: null, variation: null, color: null, size: null, side: null,\
            opts: new Set(), amount,\
            custom: \{ ...s.pending.custom \}\
          \});\
          s.pending = null;\
\
          // \uc0\u36861 \u21152 \u36092 \u20837 \u26377 \u28961 \
          s.step = "ask_additional"; sessions.set(userId, s);\
          await reply(ev.replyToken, [\{\
            type: "flex",\
            altText: "\uc0\u36861 \u21152 \u27880 \u25991 \u12398 \u26377 \u28961 ",\
            contents: buttonListBubble(p.img, "\uc0\u20182 \u12395 \u12372 \u27880 \u25991 \u12399 \u12354 \u12426 \u12414 \u12377 \u12363 \u65311 ", [\
              ["\uc0\u12399 \u12356 \u65288 \u21830 \u21697 \u12434 \u36861 \u21152 \u12377 \u12427 \u65289 ", "addmore=yes"],\
              ["\uc0\u12356 \u12356 \u12360 \u65288 \u30906 \u35469 \u12408 \u36914 \u12416 \u65289 ", "addmore=no"]\
            ])\
          \}]);\
          continue;\
        \}\
\
        /* ===========================\
         *  NEW: Canvas Art \uc0\u12501 \u12525 \u12540 \
         * =========================== */\
        if (data.startsWith("can_qty=") && s.pending?.product === "canvas_art") \{\
          const q = parseInt(data.split("=")[1], 10);\
          const qty = [1,2,3,4].includes(q) ? q : 1;\
          s.pending.custom.qty = qty;\
          s.step = "can_source"; sessions.set(userId, s);\
          await askCanvasSource(ev.replyToken);\
          continue;\
        \}\
        if (data.startsWith("can_src=") && s.pending?.product === "canvas_art") \{\
          const v = data.split("=")[1];\
          s.pending.custom.source = v;\
          s.step = "can_opt"; sessions.set(userId, s);\
          await askCanvasOption(ev.replyToken);\
          continue;\
        \}\
        if (data.startsWith("can_opt=") && s.pending?.product === "canvas_art") \{\
          const on = data.split("=")[1] === "on";\
          s.pending.custom.editAdd = !!on;\
\
          // 1\uc0\u20214 \u30906 \u23450 \
          const p = CATALOG["canvas_art"];\
          const amount = calcCanvasAmount(s.pending.custom);\
          s.order.push(\{\
            product: "canvas_art",\
            campaign: null, variation: null, color: null, size: null, side: null,\
            opts: new Set(), amount,\
            custom: \{ ...s.pending.custom \}\
          \});\
          s.pending = null;\
\
          s.step = "ask_additional"; sessions.set(userId, s);\
          await reply(ev.replyToken, [\{\
            type: "flex",\
            altText: "\uc0\u36861 \u21152 \u27880 \u25991 \u12398 \u26377 \u28961 ",\
            contents: buttonListBubble(p.img, "\uc0\u20182 \u12395 \u12372 \u27880 \u25991 \u12399 \u12354 \u12426 \u12414 \u12377 \u12363 \u65311 ", [\
              ["\uc0\u12399 \u12356 \u65288 \u21830 \u21697 \u12434 \u36861 \u21152 \u12377 \u12427 \u65289 ", "addmore=yes"],\
              ["\uc0\u12356 \u12356 \u12360 \u65288 \u30906 \u35469 \u12408 \u36914 \u12416 \u65289 ", "addmore=no"]\
            ])\
          \}]);\
          continue;\
        \}\
\
        /* ===========================\
         *  NEW: LINE Stamp \uc0\u12501 \u12525 \u12540 \
         * =========================== */\
        if (data.startsWith("st_pack=") && s.pending?.product === "line_stamp") \{\
          const v = data.split("=")[1];\
          const pack = STAMP_PACKS.find(x=>x.v===v);\
          if (!pack) \{ await askStampPack(ev.replyToken); continue; \}\
          s.pending.custom.pack = v;\
          s.pending.custom.price = pack.price;\
          s.step = "st_pet"; sessions.set(userId, s);\
          await askStampPetHeads(ev.replyToken);\
          continue;\
        \}\
        if (data.startsWith("st_pet=") && s.pending?.product === "line_stamp") \{\
          const n = parseInt(data.split("=")[1], 10);\
          const heads = [1,2,3].includes(n) ? n : 1;\
          s.pending.custom.petHeads = heads;\
          s.step = "st_pub"; sessions.set(userId, s);\
          await askStampPublish(ev.replyToken);\
          continue;\
        \}\
        if (data.startsWith("st_pub=") && s.pending?.product === "line_stamp") \{\
          const v = data.split("=")[1];\
          s.pending.custom.publish = v;\
\
          // \uc0\u30906 \u23450 \
          const amount = calcStampAmount(s.pending.custom);\
          s.order.push(\{\
            product: "line_stamp",\
            campaign: null, variation: null, color: null, size: null, side: null,\
            opts: new Set(), amount,\
            custom: \{ ...s.pending.custom \}\
          \});\
          s.pending = null;\
\
          s.step = "ask_additional"; sessions.set(userId, s);\
          await reply(ev.replyToken, [\{\
            type: "flex",\
            altText: "\uc0\u36861 \u21152 \u27880 \u25991 \u12398 \u26377 \u28961 ",\
            contents: buttonListBubble(CATALOG["line_stamp"].img, "\uc0\u20182 \u12395 \u12372 \u27880 \u25991 \u12399 \u12354 \u12426 \u12414 \u12377 \u12363 \u65311 ", [\
              ["\uc0\u12399 \u12356 \u65288 \u21830 \u21697 \u12434 \u36861 \u21152 \u12377 \u12427 \u65289 ", "addmore=yes"],\
              ["\uc0\u12356 \u12356 \u12360 \u65288 \u30906 \u35469 \u12408 \u36914 \u12416 \u65289 ", "addmore=no"]\
            ])\
          \}]);\
          continue;\
        \}\
      \}\
\
    \} catch (e) \{\
      console.error("flow error:", e?.stack || e);\
      try \{\
        await reply(ev.replyToken, [\{ type: "text", text: "\uc0\u12456 \u12521 \u12540 \u12364 \u30330 \u29983 \u12375 \u12414 \u12375 \u12383 \u12290 \u26368 \u21021 \u12363 \u12425 \u12420 \u12426 \u30452 \u12377 \u22580 \u21512 \u12399 \u12300 \u38480 \u23450 \u12301 \u12392 \u36865 \u12387 \u12390 \u12367 \u12384 \u12373 \u12356 \u12290 " \}]);\
      \} catch \{\}\
    \}\
  \}\
\
  return res.status(200).send("OK");\
\}\
\
/* ===========================\
 *  Session helpers\
 * =========================== */\
function newSession() \{ return \{ step: "idle", order: [], pending: null, customer: \{\} \}; \}\
function resetSession(s) \{ s.step = "idle"; s.order = []; s.pending = null; s.customer = \{\}; \}\
function currentItem(s) \{ return s.pending?.items?.[s.pending.currentIndex]; \}\
function newFS() \{ return \{ value: null, isFirst: true \}; \}\
function newItemState() \{\
  return \{\
    campaign: newFS(),\
    variation: newFS(),\
    color: newFS(),\
    size: newFS(),\
    side: newFS(),\
    opts: new Set(),\
    optionFirst: true,\
    amount: 0\
  \};\
\}\
\
/* ===========================\
 *  Amount / Summary\
 * =========================== */\
// \uc0\u26082 \u23384 \u12450 \u12497 \u12524 \u12523 \
function calcAmountItem(p, item) \{\
  let amount = p.basePrice || 0;\
  const sideVal = typeof item?.side === "string" ? item.side : item?.side?.value ?? null;\
  if (sideVal === "both") amount += 2000;\
\
  const opts = item?.opts;\
  const hasText =\
    opts instanceof Set ? opts.has(OPTION_KEY) :\
    Array.isArray(opts) ? opts.includes(OPTION_KEY) :\
    opts && typeof opts === "object" ? !!opts[OPTION_KEY] : false;\
\
  if (hasText) amount += OPTION_PRICE;\
  return amount;\
\}\
\
// NEW: Illustration \uc0\u21512 \u35336 \
function calcIllustrationAmount(custom) \{\
  const base = CATALOG.illustration.basePrice;\
  const add  = ILL_PET_COUNT_TIERS[custom.petCount] ?? 0; // 2\uc0\u12316 5\u21305 \u12398 \u21152 \u31639 \
  const opt  = custom.textAdd ? 400 : 0;\
  return base + add + opt;\
\}\
\
// NEW: Canvas Art \uc0\u21512 \u35336 \
function calcCanvasAmount(custom) \{\
  const base = CATALOG.canvas_art.basePrice;\
  const adder = CANVAS_ADDER_BY_QTY[custom.qty] ?? 0;\
  const opt   = custom.editAdd ? 400 : 0;\
  return base + adder + opt;\
\}\
\
// NEW: LINE Stamp \uc0\u21512 \u35336 \
function calcStampAmount(custom) \{\
  const pack = STAMP_PACKS.find(x=>x.v===custom.pack);\
  const base = pack ? pack.price : 0;\
  const surcharge = STAMP_PET_SURCHARGE.find(x=>x.n===custom.petHeads)?.add ?? 0;\
  return base + surcharge;\
\}\
\
function totalAmountAll(s) \{\
  let total = 0;\
  for (const it of s.order) \{\
    if (it.amount) \{ total += it.amount; continue; \}\
    const p = CATALOG[it.product];\
    total += calcAmountItem(p, \{ side: it.side, opts: it.opts \});\
  \}\
  return total;\
\}\
\
function orderSummaryAll(s) \{\
  const lines = ["\uc0\u12304 \u27880 \u25991 \u20869 \u23481 \u12398 \u30906 \u35469 \u12305 "];\
  s.order.forEach((it, idx) => \{\
    const p = CATALOG[it.product];\
    const appSub = it.amount || calcAmountItem(p, \{ side: it.side, opts: it.opts \});\
\
    // \uc0\u12459 \u12473 \u12479 \u12512 \u21830 \u21697 \u12398 \u34920 \u31034 \
    let extra = "";\
    if (it.product === "illustration") \{\
      const c = it.custom || \{\};\
      const style = ILL_STYLE_CHOICES.find(x=>x.v===c.style)?.label ?? "";\
      const comp  = ILL_COMPOSE_CHOICES.find(x=>x.v===c.compose)?.label ?? "";\
      const ratio = ILL_RATIO_CHOICES.find(x=>x.v===c.ratio)?.label ?? "";\
      extra = [ `\uc0\u38957 \u25968 :$\{c.petCount\}\u21305 `, comp, style, ratio, c.textAdd ? "\u25991 \u23383 \u20837 \u12428 \u12354 \u12426 \u65288 \u65291 400\u20870 \u65289 " : "" ].filter(Boolean).join(" / ");\
    \} else if (it.product === "canvas_art") \{\
      const c = it.custom || \{\};\
      const src = CANVAS_SOURCE_CHOICES.find(x=>x.v===c.source)?.label ?? "";\
      extra = [ `\uc0\u26522 \u25968 :$\{c.qty\}\u26522 `, src, c.editAdd ? "\u30011 \u20687 \u12398 \u21152 \u24037 /\u25991 \u23383 \u20837 \u12428 \u65288 \u65291 400\u20870 \u65289 " : "" ].filter(Boolean).join(" / ");\
    \} else if (it.product === "line_stamp") \{\
      const c = it.custom || \{\};\
      const pack = STAMP_PACKS.find(x=>x.v===c.pack)?.label ?? "";\
      const pub = STAMP_PUBLISH_CHOICES.find(x=>x.v===c.publish)?.label ?? "";\
      extra = [ pack, `\uc0\u38957 \u25968 :$\{c.petHeads\}\u21305 `, pub ].filter(Boolean).join(" / ");\
    \} else \{\
      // \uc0\u26082 \u23384 \u12450 \u12497 \u12524 \u12523 \
      const sideStr = it.side === "both" ? "\uc0\u20001 \u38754 \u12503 \u12522 \u12531 \u12488 \u65288 \u65291 2,000\u20870 \u65289 " : sideLabel(it.product, it.side);\
      const hasText = it.opts && it.opts instanceof Set && it.opts.has(OPTION_KEY);\
      const optStr  = hasText ? `\uc0\u65295 $\{OPTION_LABEL\}` : "";\
      extra = [ colorLabel(it.color), sizeLabel(it.size), [sideStr,optStr].filter(Boolean).join("") ].filter(Boolean).join("\uc0\u65295 ");\
    \}\
\
    lines.push(\
      [\
        `\\n#$\{idx + 1\} $\{p.label\}`,\
        extra ? extra : "",\
        `\uc0\u8594  $\{appSub.toLocaleString()\}\u20870 `\
      ].filter(Boolean).join("\\n")\
    );\
  \});\
  lines.push(`\\n\uc0\u21512 \u35336 : $\{totalAmountAll(s).toLocaleString()\}\u20870 `);\
  return lines.join("\\n");\
\}\
\
/* ===========================\
 *  Square Line Items\
 * =========================== */\
function buildSquareLineItems(s) \{\
  const items = [];\
  for (const it of s.order) \{\
    const p = CATALOG[it.product];\
\
    if (it.product === "illustration") \{\
      const c = it.custom || \{\};\
      const name = [p.label, `\uc0\u38957 \u25968 :$\{c.petCount\}\u21305 `, ILL_COMPOSE_CHOICES.find(x=>x.v===c.compose)?.label, ILL_STYLE_CHOICES.find(x=>x.v===c.style)?.label, ILL_RATIO_CHOICES.find(x=>x.v===c.ratio)?.label, c.textAdd ? "\u25991 \u23383 \u20837 \u12428 " : null].filter(Boolean).join(" / ");\
      items.push(\{ name, amount: calcIllustrationAmount(c), quantity: 1 \});\
      continue;\
    \}\
\
    if (it.product === "canvas_art") \{\
      const c = it.custom || \{\};\
      const name = [p.label, `\uc0\u26522 \u25968 :$\{c.qty\}\u26522 `, CANVAS_SOURCE_CHOICES.find(x=>x.v===c.source)?.label, c.editAdd ? "\u21152 \u24037 /\u25991 \u23383 \u20837 \u12428 " : null].filter(Boolean).join(" / ");\
      items.push(\{ name, amount: calcCanvasAmount(c), quantity: 1 \});\
      continue;\
    \}\
\
    if (it.product === "line_stamp") \{\
      const c = it.custom || \{\};\
      const pack = STAMP_PACKS.find(x=>x.v===c.pack)?.label ?? "";\
      const surcharge = STAMP_PET_SURCHARGE.find(x=>x.n===c.petHeads)?.add ?? 0;\
      const base = STAMP_PACKS.find(x=>x.v===c.pack)?.price ?? 0;\
\
      items.push(\{ name: `$\{p.label\} / $\{pack\}`, amount: base, quantity: 1 \});\
      if (surcharge) items.push(\{ name: `\uc0\u38957 \u25968 \u21152 \u31639 \u65288 $\{c.petHeads\}\u21305 \u65289 `, amount: surcharge, quantity: 1 \});\
      continue;\
    \}\
\
    // \uc0\u26082 \u23384 \u12450 \u12497 \u12524 \u12523 \
    let unit = p.basePrice || 0;\
    if (it.side === "both") unit += 2000;\
    if (it.opts && it.opts.has(OPTION_KEY)) unit += OPTION_PRICE;\
\
    const optLabels = [];\
    if (it.side === "both") optLabels.push("\uc0\u20001 \u38754 ");\
    if (it.opts && it.opts.has(OPTION_KEY)) optLabels.push("\uc0\u25991 \u23383 \u20837 \u12428 ");\
\
    const name = [\
      p.label,\
      sizeLabel(it.size),\
      colorLabel(it.color),\
      optLabels.length ? `\uc0\u12458 \u12503 \u12471 \u12519 \u12531 :$\{optLabels.join("\u12539 ")\}` : null,\
    ].filter(Boolean).join(" / ");\
\
    items.push(\{ name, amount: unit, quantity: 1 \});\
  \}\
  return items;\
\}\
\
/* ===========================\
 *  UI: \uc0\u20849 \u36890 \
 * =========================== */\
async function askPickProduct(replyToken, leadingMsg) \{\
  const msgs = [];\
  if (leadingMsg) msgs.push(\{ type: "text", text: leadingMsg \});\
  msgs.push(\{ type: "flex", altText: "\uc0\u21830 \u21697 \u36984 \u25246 ", contents: productCarousel() \});\
  msgs.push(\{ type: "text", text: "\uc0\u19978 \u35352 \u12424 \u12426 \u12289 \u12372 \u24076 \u26395 \u12398 \u21830 \u21697 \u12434 \u12362 \u36984 \u12403 \u12367 \u12384 \u12373 \u12356 \u12290 " \});\
  await reply(replyToken, msgs);\
\}\
function productCarousel() \{\
  const bubbles = Object.entries(CATALOG).map(([key, p]) =>\
    cardBubble(\{\
      heroUrl: absoluteUrl(p.img),\
      title: `$\{p.label\}  $\{p.basePrice ? `\'a5$\{p.basePrice.toLocaleString()\}` : ""\}`,\
      buttons: [["\uc0\u36984 \u12406 ", `product=$\{key\}`]]\
    \})\
  );\
  return \{ type: "carousel", contents: bubbles \};\
\}\
\
/* ===========================\
 *  UI: \uc0\u26082 \u23384 \u65288 \u12461 \u12515 \u12531 \u12506 \u12540 \u12531 /\u12496 \u12522 \u12456 \u12540 \u12471 \u12519 \u12531 \u12394 \u12393 \u65289 \
 * =========================== */\
const CAMPAIGNS = \{\
  momiji: \{ id: "momiji", label: "\uc0\u32005 \u33865 \u12395 \u21253 \u12414 \u12428 \u12427 \u12365 \u12415 ", img: "/kouyounitutumarerukimi_matome.png" \},\
  aki_walk: \{ id: "aki_walk", label: "\uc0\u31179 \u12434 \u25955 \u31574 \u12377 \u12427 \u12365 \u12415 ", img: "/akiwosansakusurukimi_matome.png" \}\
\};\
const VARIATIONS = \{\
  normal:   \{ id: "normal",   label: "\uc0\u36890 \u24120 ver",    img: \{ momiji: "/kouyounitutumareru_kimi2.png", aki_walk: "/akiwosansakusuru_kimi2.png" \} \},\
  halloween:\{ id: "halloween",label: "\uc0\u12495 \u12525 \u12454 \u12451 \u12531 ver", img: \{ momiji: "/kouyounitutumareru_kimi3.png", aki_walk: "/akiwosansakusuru_kimi3.png" \} \}\
\};\
function campaignSelector() \{\
  const bubbles = Object.values(CAMPAIGNS).map((c) =>\
    cardBubble(\{ heroUrl: absoluteUrl(c.img), title: c.label, buttons: [["\uc0\u12371 \u12398 \u12486 \u12540 \u12510 \u12391 \u36914 \u12416 ", `campaign=$\{c.id\}`]] \})\
  );\
  return \{ type: "carousel", contents: bubbles \};\
\}\
function variationSelectorForCampaign(campaignId) \{\
  const bubbles = Object.values(VARIATIONS).map((v) => \{\
    const hero = v.img?.[campaignId] || Object.values(v.img || \{\})[0] || "";\
    return cardBubble(\{ heroUrl: absoluteUrl(hero), title: v.label, buttons: [["\uc0\u12371 \u12398 \u12496 \u12522 \u12456 \u12540 \u12471 \u12519 \u12531 \u12391 \u36914 \u12416 ", `variation=$\{v.id\}`]] \});\
  \});\
  return \{ type: "carousel", contents: bubbles \};\
\}\
async function gotoColorSizeSideOrOption(replyToken, s, userId, leadingMsg) \{\
  const prod = s.pending.product; const p = CATALOG[prod];\
  const msgs = []; if (leadingMsg) msgs.push(\{ type: "text", text: leadingMsg \});\
  const item = currentItem(s);\
\
  if (p.colors?.length && item.color.value == null) \{\
    s.step = "pick_color_item"; sessions.set(userId, s);\
    const colorHero = prod === "tshirt_premium" ? TSHIRT_COLOR_HERO : p.img;\
    msgs.push(\
      \{ type: "text", text: "\uc0\u12459 \u12521 \u12540 \u12434 \u36984 \u25246 \u12375 \u12390 \u12367 \u12384 \u12373 \u12356 " \},\
      \{ type: "flex", altText: "\uc0\u12459 \u12521 \u12540 \u36984 \u25246 ", contents: buttonListBubble(colorHero, "\u12459 \u12521 \u12540 \u12434 \u36984 \u25246 ", p.colors.map(c=>[colorLabel(c), `color=$\{c\}`])) \}\
    );\
    await reply(replyToken, msgs); return;\
  \}\
  if (p.sizes?.length && item.size.value == null) \{\
    s.step = "pick_size_item"; sessions.set(userId, s);\
    const sizeTitle = prod === "tshirt_premium" ? "\uc0\u12469 \u12452 \u12474 \u12434 \u36984 \u25246 \u12375 \u12390 \u12367 \u12384 \u12373 \u12356 \u65288 \u8251 \u23376 \u20379 \u29992 120\u12399 \u30333 \u12398 \u12415 \u65289 " : "\u12469 \u12452 \u12474 \u12434 \u36984 \u25246 \u12375 \u12390 \u12367 \u12384 \u12373 \u12356 ";\
    const sizeHero = p.sizeImg || p.img;\
    msgs.push(\{ type: "text", text: sizeTitle \}, \{ type: "flex", altText: "\uc0\u12469 \u12452 \u12474 \u36984 \u25246 ", contents: buttonListBubble(sizeHero, "\u12469 \u12452 \u12474 \u12434 \u36984 \u25246 ", p.sizes.map(z=>[sizeLabel(z), `size=$\{z\}`])) \});\
    await reply(replyToken, msgs); return;\
  \}\
  const sides = SIDE_BY_PRODUCT[prod] || [];\
  if (sides.length && item.side.value == null) \{\
    s.step = "pick_side_item"; sessions.set(userId, s);\
    const sideHero = p.sideImg || (prod === "tshirt_premium" ? TSHIRT_SIDE_HERO : p.img);\
    msgs.push(\
      \{ type: "text", text: "\uc0\u12503 \u12522 \u12531 \u12488 \u38754 \u12434 \u36984 \u25246 \u12375 \u12390 \u12367 \u12384 \u12373 \u12356 " \},\
      \{ type: "flex", altText: "\uc0\u12503 \u12522 \u12531 \u12488 \u38754 \u36984 \u25246 ", contents: buttonListBubble(sideHero, "\u12503 \u12522 \u12531 \u12488 \u38754 \u12434 \u36984 \u25246 ", sides.map(si=>[si.label, `side=$\{si.v\}`])) \}\
    );\
    await reply(replyToken, msgs); return;\
  \}\
  s.step = "pick_opts_item"; sessions.set(userId, s);\
  await sendOptionsAndNextItem(replyToken, s, leadingMsg);\
\}\
async function sendOptionsAndNextItem(replyToken, s, leadingMsg) \{\
  const prod = s.pending.product; const p = CATALOG[prod];\
  const msgs = []; if (leadingMsg) msgs.push(\{ type: "text", text: leadingMsg \});\
  const optionHero = TSHIRT_OPTION_HERO || p.img;\
  const bubble = \{\
    type: "bubble",\
    hero: \{ type: "image", url: absoluteUrl(optionHero), size: "full", aspectRatio: "20:13", aspectMode: "cover" \},\
    body: \{\
      type: "box", layout: "vertical", spacing: "md",\
      contents: [\
        \{ type: "text", text: "\uc0\u12458 \u12503 \u12471 \u12519 \u12531 \u12434 \u36984 \u25246 \u12375 \u12390 \u12367 \u12384 \u12373 \u12356 ", weight: "bold", size: "lg" \},\
        \{ type: "text", text: OPTION_LABEL, size: "md" \},\
        \{ type: "button", style: "secondary", action: \{ type: "postback", label: "\uc0\u12377 \u12427 ",   data: `optset=$\{OPTION_KEY\}:on` \} \},\
        \{ type: "button", style: "secondary", action: \{ type: "postback", label: "\uc0\u12375 \u12394 \u12356 ", data: `optset=$\{OPTION_KEY\}:off` \} \}\
      ]\
    \}\
  \};\
  msgs.push(\{ type: "flex", altText: "\uc0\u12458 \u12503 \u12471 \u12519 \u12531 \u36984 \u25246 ", contents: bubble \});\
  await reply(replyToken, msgs);\
\}\
async function finalizeCurrentItem(replyToken, s, userId, leadingMsg) \{\
  const prod = s.pending.product; const p = CATALOG[prod]; const item = currentItem(s);\
  item.amount = calcAmountItem(p, item);\
\
  if (s.pending.currentIndex + 1 < s.pending.quantity) \{\
    s.pending.currentIndex++; s.step = "pick_campaign_item"; sessions.set(userId, s);\
    const msgs = []; if (leadingMsg) msgs.push(\{ type: "text", text: leadingMsg \});\
    msgs.push(\{ type: "text", text: `\uc0\u32154 \u12356 \u12390  $\{s.pending.currentIndex + 1\}\u28857 \u30446 \u12398 \u12486 \u12540 \u12510 \u12434 \u12362 \u36984 \u12403 \u12367 \u12384 \u12373 \u12356 \u12290 ` \}, \{ type: "flex", altText: "\u12461 \u12515 \u12531 \u12506 \u12540 \u12531 \u36984 \u25246 ", contents: campaignSelector() \});\
    await reply(replyToken, msgs); return;\
  \}\
\
  s.order.push(\
    ...s.pending.items.map((x) => (\{\
      product: prod,\
      campaign: x.campaign.value,\
      variation: x.variation.value,\
      color: x.color.value,\
      size: x.size.value,\
      side: x.side.value,\
      opts: new Set(x.opts)\
    \}))\
  );\
  s.pending = null;\
  s.step = "ask_additional"; sessions.set(userId, s);\
  await reply(replyToken, [\{\
    type: "flex",\
    altText: "\uc0\u36861 \u21152 \u27880 \u25991 \u12398 \u26377 \u28961 ",\
    contents: buttonListBubble(CATALOG[prod]?.img || CATALOG["tshirt_premium"].img, "\uc0\u20182 \u12395 \u12372 \u27880 \u25991 \u12399 \u12354 \u12426 \u12414 \u12377 \u12363 \u65311 ", [\
      ["\uc0\u12399 \u12356 \u65288 \u21830 \u21697 \u12434 \u36861 \u21152 \u12377 \u12427 \u65289 ","addmore=yes"],["\u12356 \u12356 \u12360 \u65288 \u30906 \u35469 \u12408 \u36914 \u12416 \u65289 ","addmore=no"]\
    ])\
  \}]);\
\}\
\
/* ===========================\
 *  UI: Illustration\
 * =========================== */\
async function askIllustrationPetCount(replyToken) \{\
  const pairs = [\
    ["1\uc0\u21305 \u65288 \u65291 \'a50\u65289 ", "ill_pet=1"],\
    ["2\uc0\u21305 \u65288 \u65291 \'a51,500\u65289 ", "ill_pet=2"],\
    ["3\uc0\u21305 \u65288 \u65291 \'a52,800\u65289 ", "ill_pet=3"],\
    ["4\uc0\u21305 \u65288 \u65291 \'a54,100\u65289 ", "ill_pet=4"],\
    ["5\uc0\u21305 \u65288 \u65291 \'a55,400\u65289 ", "ill_pet=5"],\
    ["6\uc0\u21305 \u20197 \u19978 \u65288 \u20107 \u21069 \u12395 \u12372 \u30456 \u35527 \u12367 \u12384 \u12373 \u12356 \u65289 ", "ill_pet=6"]\
  ];\
  await reply(replyToken, [\
    \{ type: "text", text: "\uc0\u12452 \u12521 \u12473 \u12488 \u12395 \u12375 \u12383 \u12356 \u12506 \u12483 \u12488 \u12398 \u38957 \u25968 \u12434 \u12362 \u36984 \u12403 \u12367 \u12384 \u12373 \u12356 \u12290 " \},\
    \{ type: "flex", altText: "\uc0\u38957 \u25968 \u36984 \u25246 ", contents: buttonListBubble(CATALOG.illustration.img, "\u12506 \u12483 \u12488 \u38957 \u25968 \u12434 \u36984 \u25246 ", pairs) \}\
  ]);\
\}\
async function askIllustrationCompose(replyToken, n) \{\
  const note = n >= 6 ? "\uc0\u8251 6\u21305 \u20197 \u19978 \u12399 \u21046 \u20316 \u21487 \u21542 \u12539 \u12362 \u35211 \u31309 \u12426 \u12434 \u20107 \u21069 \u12395 \u12372 \u30456 \u35527 \u12367 \u12384 \u12373 \u12356 \u12290 " : "";\
  await reply(replyToken, [\
    ...(note ? [\{ type: "text", text: note \}] : []),\
    \{ type: "flex", altText: "\uc0\u27083 \u25104 \u36984 \u25246 ", contents: buttonListBubble(CATALOG.illustration.img, "1\u26522 \u20869 \u12398 \u27083 \u25104 \u12434 \u36984 \u25246 ", ILL_COMPOSE_CHOICES.map(c=>[c.label, `ill_compose=$\{c.v\}`])) \}\
  ]);\
\}\
async function askIllustrationStyle(replyToken) \{\
  await reply(replyToken, [\
    \{ type: "flex", altText: "\uc0\u20316 \u39080 \u36984 \u25246 ", contents: buttonListBubble(CATALOG.illustration.img, "\u24076 \u26395 \u12398 \u20316 \u39080 \u12434 \u36984 \u25246 ", ILL_STYLE_CHOICES.map(c=>[c.label, `ill_style=$\{c.v\}`])) \}\
  ]);\
\}\
async function askIllustrationOption(replyToken) \{\
  await reply(replyToken, [\
    \{ type: "flex", altText: "\uc0\u25991 \u23383 \u20837 \u12428 ", contents: buttonListBubble(CATALOG.illustration.img, "\u25991 \u23383 \u20837 \u12428 \u12434 \u24076 \u26395 \u12375 \u12414 \u12377 \u12363 \u65311 \u65288 \u65291 \'a5400\u65289 ", [["\u24076 \u26395 \u12377 \u12427 ","ill_opt=on"],["\u19981 \u35201 ","ill_opt=off"]]) \}\
  ]);\
\}\
async function askIllustrationRatio(replyToken) \{\
  await reply(replyToken, [\
    \{ type: "flex", altText: "\uc0\u12450 \u12473 \u12506 \u12463 \u12488 \u27604 ", contents: buttonListBubble(CATALOG.illustration.img, "\u12372 \u24076 \u26395 \u12398 \u12450 \u12473 \u12506 \u12463 \u12488 \u27604 \u12434 \u36984 \u25246 ", ILL_RATIO_CHOICES.map(r=>[r.label, `ill_ratio=$\{r.v\}`])) \}\
  ]);\
\}\
\
/* ===========================\
 *  UI: Canvas Art\
 * =========================== */\
async function askCanvasQty(replyToken) \{\
  const pairs = [\
    ["1\uc0\u26522 \u65288 \u22522 \u26412  \'a55,400\u65289 ","can_qty=1"],\
    ["2\uc0\u26522 \u65288 \u65291 \'a54,800\u65289 ","can_qty=2"],\
    ["3\uc0\u26522 \u65288 \u65291 \'a59,300\u65289 ","can_qty=3"],\
    ["4\uc0\u26522 \u65288 \u65291 \'a513,800\u65289 ","can_qty=4"]\
  ];\
  await reply(replyToken, [\
    \{ type: "flex", altText: "\uc0\u26522 \u25968 \u36984 \u25246 ", contents: buttonListBubble(CATALOG.canvas_art.img, "\u12461 \u12515 \u12531 \u12496 \u12473 \u12450 \u12540 \u12488 \u12398 \u26522 \u25968 \u12434 \u36984 \u25246 ", pairs) \}\
  ]);\
\}\
async function askCanvasSource(replyToken) \{\
  await reply(replyToken, [\
    \{ type: "flex", altText: "\uc0\u32032 \u26448 \u36984 \u25246 ", contents: buttonListBubble(CATALOG.canvas_art.img, "\u12487 \u12470 \u12452 \u12531 \u12398 \u32032 \u26448 \u12434 \u36984 \u25246 ", CANVAS_SOURCE_CHOICES.map(c=>[c.label, `can_src=$\{c.v\}`])) \}\
  ]);\
\}\
async function askCanvasOption(replyToken) \{\
  await reply(replyToken, [\
    \{ type: "flex", altText: "\uc0\u21152 \u24037 /\u25991 \u23383 \u20837 \u12428 ", contents: buttonListBubble(CATALOG.canvas_art.img, "\u30011 \u20687 \u12398 \u21152 \u24037 /\u25991 \u23383 \u20837 \u12428 \u65288 \u65291 \'a5400\u65289 \u12434 \u24076 \u26395 \u12375 \u12414 \u12377 \u12363 \u65311 ", [["\u24076 \u26395 \u12377 \u12427 ","can_opt=on"],["\u19981 \u35201 ","can_opt=off"]]) \}\
  ]);\
\}\
\
/* ===========================\
 *  UI: LINE Stamps\
 * =========================== */\
async function askStampPack(replyToken) \{\
  await reply(replyToken, [\
    \{ type: "flex", altText: "\uc0\u12473 \u12479 \u12531 \u12503 \u12497 \u12483 \u12463 ", contents: buttonListBubble(CATALOG.line_stamp.img, "\u12497 \u12483 \u12463 \u12434 \u36984 \u25246 ", STAMP_PACKS.map(p=>[`$\{p.label\}\u65306 \'a5$\{p.price.toLocaleString()\}`, `st_pack=$\{p.v\}`])) \}\
  ]);\
\}\
async function askStampPetHeads(replyToken) \{\
  await reply(replyToken, [\
    \{ type: "flex", altText: "\uc0\u38957 \u25968 \u36984 \u25246 ", contents: buttonListBubble(CATALOG.line_stamp.img, "\u12506 \u12483 \u12488 \u38957 \u25968 \u12434 \u36984 \u25246 ", STAMP_PET_SURCHARGE.map(x=>[` $\{x.n\}\u21305  $\{x.add?`\u65288 \u65291 \'a5$\{x.add.toLocaleString()\}\u65289 `:""\}`, `st_pet=$\{x.n\}`])) \}\
  ]);\
\}\
async function askStampPublish(replyToken) \{\
  await reply(replyToken, [\
    \{ type: "text", text: "\uc0\u25522 \u36617 \u12398 \u12372 \u21332 \u21147 \u12395 \u12388 \u12356 \u12390 \u65306 \u12527 \u12531 \u12385 \u12419 \u12435 \u12398 \u12362 \u20889 \u30495 \u12392 \u23436 \u25104 \u12473 \u12479 \u12531 \u12503 \u12434 \u32057 \u20171 \u12373 \u12379 \u12390 \u12356 \u12383 \u12384 \u12367 \u12371 \u12392 \u12364 \u12354 \u12426 \u12414 \u12377 \u12290 " \},\
    \{ type: "flex", altText: "\uc0\u25522 \u36617 \u21487 \u21542 ", contents: buttonListBubble(CATALOG.line_stamp.img, "\u25522 \u36617 \u12398 \u21487 \u21542 \u12434 \u12362 \u36984 \u12403 \u12367 \u12384 \u12373 \u12356 ", STAMP_PUBLISH_CHOICES.map(x=>[x.label, `st_pub=$\{x.v\}`])) \}\
  ]);\
\}\
\
/* ===========================\
 *  Customer Info\
 * =========================== */\
async function askCustomerName(replyToken) \{ await reply(replyToken, [\{ type: "text", text: "\uc0\u12304 \u12362 \u23458 \u27096 \u24773 \u22577 \u12305 \\n\u12362 \u21517 \u21069 \u65288 \u12501 \u12523 \u12493 \u12540 \u12512 \u65289 \u12434 \u12372 \u20837 \u21147 \u12367 \u12384 \u12373 \u12356 \u12290 " \}]); \}\
async function askCustomerPhone(replyToken) \{ await reply(replyToken, [\{ type: "text", text: "\uc0\u12362 \u38651 \u35441 \u30058 \u21495 \u65288 \u12495 \u12452 \u12501 \u12531 \u12394 \u12375 \u65289 \u12434 \u12372 \u20837 \u21147 \u12367 \u12384 \u12373 \u12356 \u12290 " \}]); \}\
async function askCustomerPostal(replyToken)\{ await reply(replyToken, [\{ type: "text", text: "\uc0\u37109 \u20415 \u30058 \u21495 \u12434 \u12372 \u20837 \u21147 \u12367 \u12384 \u12373 \u12356 \u12290 " \}]); \}\
async function askCustomerAddress1(replyToken)\{ await reply(replyToken, [\{ type: "text", text: "\uc0\u12372 \u20303 \u25152 \u12434 \u12372 \u20837 \u21147 \u12367 \u12384 \u12373 \u12356 \u12290 " \}]); \}\
async function askCustomerAddress2(replyToken)\{ await reply(replyToken, [\{ type: "text", text: "\uc0\u24314 \u29289 \u21517 \u12539 \u37096 \u23627 \u30058 \u21495 \u12364 \u12354 \u12428 \u12400 \u12372 \u20837 \u21147 \u12367 \u12384 \u12373 \u12356 \u12290 \u65288 \u12394 \u12369 \u12428 \u12400 \u12300 \u12394 \u12375 \u12301 \u65289 " \}]); \}\
\
/* ===========================\
 *  Builders: Push texts\
 * =========================== */\
function buildOrderLines(s) \{\
  const itemLines = s.order.map((it, idx) => \{\
    const p = CATALOG[it.product];\
    const sub = it.amount || calcAmountItem(p, \{ side: it.side, opts: it.opts \});\
\
    let extra = "";\
    if (it.product === "illustration") \{\
      const c = it.custom || \{\};\
      const style = ILL_STYLE_CHOICES.find(x=>x.v===c.style)?.label ?? "";\
      const comp  = ILL_COMPOSE_CHOICES.find(x=>x.v===c.compose)?.label ?? "";\
      const ratio = ILL_RATIO_CHOICES.find(x=>x.v===c.ratio)?.label ?? "";\
      extra = [ `\uc0\u38957 \u25968 :$\{c.petCount\}\u21305 `, comp, style, ratio, c.textAdd ? "\u25991 \u23383 \u20837 \u12428 \u12354 \u12426 \u65288 \u65291 400\u20870 \u65289 " : "" ].filter(Boolean).join(" / ");\
    \} else if (it.product === "canvas_art") \{\
      const c = it.custom || \{\};\
      const src = CANVAS_SOURCE_CHOICES.find(x=>x.v===c.source)?.label ?? "";\
      extra = [ `\uc0\u26522 \u25968 :$\{c.qty\}\u26522 `, src, c.editAdd ? "\u21152 \u24037 /\u25991 \u23383 \u20837 \u12428 \u65288 \u65291 400\u20870 \u65289 " : "" ].filter(Boolean).join(" / ");\
    \} else if (it.product === "line_stamp") \{\
      const c = it.custom || \{\};\
      const pack = STAMP_PACKS.find(x=>x.v===c.pack)?.label ?? "";\
      const pub = STAMP_PUBLISH_CHOICES.find(x=>x.v===c.publish)?.label ?? "";\
      extra = [ pack, `\uc0\u38957 \u25968 :$\{c.petHeads\}\u21305 `, pub ].filter(Boolean).join(" / ");\
    \} else \{\
      const sideStr = it.side === "both" ? "\uc0\u20001 \u38754 \u12503 \u12522 \u12531 \u12488 \u65288 \u65291 2,000\u20870 \u65289 " : sideLabel(it.product, it.side);\
      const hasText = it.opts && it.opts instanceof Set && it.opts.has(OPTION_KEY);\
      const optStr  = hasText ? `\uc0\u65295 $\{OPTION_LABEL\}` : "";\
      extra = [ colorLabel(it.color), sizeLabel(it.size), [sideStr,optStr].filter(Boolean).join("") ].filter(Boolean).join("\uc0\u65295 ");\
    \}\
\
    return [`\\n#$\{idx+1\} $\{p.label\}`, extra, `\uc0\u8594  \'a5$\{sub.toLocaleString()\}`].filter(Boolean).join("\\n");\
  \});\
  return itemLines;\
\}\
function buildCustomerLines(cust) \{\
  return [\
    `\uc0\u12362 \u21517 \u21069 \u65306 $\{cust.name\}`,\
    `\uc0\u38651 \u35441 \u65306 $\{cust.phone\}`,\
    `\uc0\u37109 \u20415 \u30058 \u21495 \u65306 $\{cust.postal\}`,\
    `\uc0\u20303 \u25152 \u65306 $\{cust.address1\}$\{cust.address2 ? " " + cust.address2 : ""\}`\
  ];\
\}\
function buildCustomerConfirmationText(s) \{\
  const lines = ["\uc0\u12304 \u12372 \u27880 \u25991 \u20869 \u23481 \u12399 \u20197 \u19979 \u12398 \u36890 \u12426 \u12391 \u12377 \u12305 ", ...buildOrderLines(s), `\\n\u21512 \u35336 \u65306 \'a5$\{totalAmountAll(s).toLocaleString()\}`, "", "\u12304 \u12362 \u23626 \u12369 \u20808 \u12305 ", ...buildCustomerLines(s.customer), ""];\
  return lines.join("\\n");\
\}\
function buildAdminConfirmationText(userId, s) \{\
  const lines = ["\uc0\u12304 \u27880 \u25991 \u30906 \u23450 \u65288 \u12362 \u23458 \u27096 \u25511 \u12360 \u36865 \u20449 \u28168 \u12415 \u65289 \u12305 ", `userId: $\{userId\}`, ...buildOrderLines(s), `\\n\u21512 \u35336 \u65306 \'a5$\{totalAmountAll(s).toLocaleString()\}`, "", "\u12304 \u12362 \u23626 \u12369 \u20808 \u12305 ", ...buildCustomerLines(s.customer)];\
  return lines.join("\\n");\
\}\
\
/* ===========================\
 *  UI building blocks\
 * =========================== */\
function buttonListBubble(heroImgPathOrUrl, title, pairs) \{\
  const buttons = pairs.map(([label, data]) => (\{ type: "button", style: "secondary", action: \{ type: "postback", label, data \} \}));\
  const isObj = title && typeof title === "object";\
  const contents = [];\
  if (isObj && title.linkText && title.link) \{\
    contents.push(\{ type: "text", text: String(title.linkText), weight: "bold", size: "lg", wrap: true, action: \{ type: "uri", uri: String(title.link) \} \});\
    if (title.subtitle) contents.push(\{ type: "text", text: String(title.subtitle), size: "md", wrap: true \});\
  \} else \{\
    contents.push(\{ type: "text", text: String(title), weight: "bold", size: "lg", wrap: true \});\
  \}\
  return \{\
    type: "bubble",\
    hero: \{ type: "image", url: absoluteUrl(heroImgPathOrUrl), size: "full", aspectRatio: "20:13", aspectMode: "cover" \},\
    body: \{ type: "box", layout: "vertical", spacing: "md", contents: [...contents, ...buttons] \}\
  \};\
\}\
function cardBubble(\{ heroUrl, title, buttons \}) \{\
  const btnNodes = buttons.map(([label, payload]) => (\{ type: "button", style: "primary", action: \{ type: "postback", label, data: payload \} \}));\
  return \{\
    type: "bubble",\
    hero: \{ type: "image", url: heroUrl, size: "full", aspectRatio: "20:13", aspectMode: "cover" \},\
    body: \{ type: "box", layout: "vertical", contents: [\{ type: "text", text: title, weight: "bold", size: "lg", wrap: true \}] \},\
    footer: \{ type: "box", layout: "vertical", contents: btnNodes \}\
  \};\
\}\
function confirmationBubble(\{ title, orderText, customer \}) \{\
  return \{\
    type: "bubble",\
    body: \{\
      type: "box", layout: "vertical", spacing: "md",\
      contents: [\
        \{ type: "text", text: title, weight: "bold", size: "lg", wrap: true \},\
        \{ type: "text", text: "\uc0\u12304 \u12372 \u27880 \u25991 \u12305 ", weight: "bold" \},\
        \{ type: "text", text: orderText, wrap: true \},\
        \{ type: "text", text: "\uc0\u12304 \u12362 \u23626 \u12369 \u20808 \u12305 ", weight: "bold", margin: "md" \},\
        \{ type: "text", text: `\uc0\u12362 \u21517 \u21069 \u65306 $\{customer.name\}`, wrap: true \},\
        \{ type: "text", text: `\uc0\u38651 \u35441 \u65306 $\{customer.phone\}`, wrap: true \},\
        \{ type: "text", text: `\uc0\u37109 \u20415 \u30058 \u21495 \u65306 $\{customer.postal\}`, wrap: true \},\
        \{ type: "text", text: `\uc0\u20303 \u25152 \u65306 $\{customer.address1\}$\{customer.address2 ? " " + customer.address2 : ""\}`, wrap: true \}\
      ]\
    \}\
  \};\
\}\
\
/* ===========================\
 *  Labels / Utils\
 * =========================== */\
function colorLabel(v) \{ return (\{ white: "\uc0\u30333 ", gray: "\u12464 \u12524 \u12540 ", baby_pink: "\u12500 \u12531 \u12463 ", natural: "\u12490 \u12481 \u12517 \u12521 \u12523 " \}[v] || v || ""); \}\
function sizeLabel(v)  \{ return (\{ kids120: "\uc0\u23376 \u20379 \u29992 120" \}[v] || v || ""); \}\
function sideLabel(productKey, v) \{ const arr = SIDE_BY_PRODUCT[productKey] || []; return arr.find(x=>x.v===v)?.label || v || ""; \}\
function absoluteUrl(path) \{ if (!path) return PUBLIC_BASE; if (/^https?:\\/\\//i.test(path)) return path; const cleaned = String(path).trim().replace(/^\\/+/, "/"); return `$\{PUBLIC_BASE\}$\{cleaned\}`; \}\
function normalizeText(t) \{ return (t || "").replace(/\\s+/g, "").replace(/\uc0\u65286 /g, "&").toLowerCase(); \}\
\
/* ===========================\
 *  Square\uc0\u65288 \u27770 \u28168 \u12522 \u12531 \u12463 \u29983 \u25104 \u65289 \
 * =========================== */\
async function createSquarePaymentLink(\{ items = [], referenceId \}) \{\
  if (!process.env.SQUARE_ACCESS_TOKEN || !process.env.SQUARE_LOCATION_ID || !SQUARE_API_BASE) \{\
    console.error("[Square] missing env:", \{ hasToken: !!process.env.SQUARE_ACCESS_TOKEN, hasLoc: !!process.env.SQUARE_LOCATION_ID, base: SQUARE_API_BASE \});\
    return null;\
  \}\
  const lineItems = items.map(i => (\{ name: String(i.name), quantity: String(i.quantity ?? 1), base_price_money: \{ amount: Math.round(Number(i.amount || 0)), currency: "JPY" \} \}));\
  const payload = \{ idempotency_key: crypto.randomUUID(), order: \{ location_id: process.env.SQUARE_LOCATION_ID, line_items: lineItems, reference_id: referenceId || undefined \} \};\
  try \{\
    const r = await fetch(`$\{SQUARE_API_BASE\}/v2/online-checkout/payment-links`, \{\
      method: "POST",\
      headers: \{ "Content-Type": "application/json", Authorization: `Bearer $\{process.env.SQUARE_ACCESS_TOKEN\}` \},\
      body: JSON.stringify(payload),\
    \});\
    if (!r.ok) \{ const body = await r.text().catch(()=> ""); console.error("[Square] payment-links error:", r.status, body); return null; \}\
    const json = await r.json(); return json?.payment_link?.url || null;\
  \} catch (e) \{ console.error("Square link exception:", e); return null; \}\
\}\
\
/* ===========================\
 *  LINE send (reply / push)\
 * =========================== */\
async function reply(replyToken, messages) \{\
  try \{\
    const r = await fetch("https://api.line.me/v2/bot/message/reply", \{\
      method: "POST",\
      headers: \{ Authorization: `Bearer $\{process.env.LINE_CHANNEL_ACCESS_TOKEN\}`, "Content-Type": "application/json" \},\
      body: JSON.stringify(\{ replyToken, messages \})\
    \});\
    if (!r.ok) \{ const t = await r.text().catch(()=>""); console.warn("[reply] non-2xx:", r.status, t); \}\
  \} catch (e) \{ console.error("[reply] fetch error:", e); \}\
\}\
async function push(toId, messages) \{\
  try \{\
    const r = await fetch("https://api.line.me/v2/bot/message/push", \{\
      method: "POST",\
      headers: \{ Authorization: `Bearer $\{process.env.LINE_CHANNEL_ACCESS_TOKEN\}`, "Content-Type": "application/json" \},\
      body: JSON.stringify(\{ to: toId, messages \})\
    \});\
    if (!r.ok) \{ const t = await r.text().catch(()=> ""); console.warn("[push] non-2xx:", r.status, t); \}\
  \} catch (e) \{ console.error("[push] fetch error:", e); \}\
\}\
\
/* ===========================\
 *  \uc0\u20837 \u37329 \u36899 \u32097 \u12513 \u12483 \u12475 \u12540 \u12472 \u21028 \u23450 \
 * =========================== */\
const PAID_CORE =\
  '(?:\uc0\u12372 ?\u20837 \u37329 \\\\s*(?:\u28168 \u12415 ?|\u23436 \u20102 |(?:\u12356 \u12383 )?\u12375 \u12414 \u12375 \u12383 ?)|\u20837 \u37329 [\u28168 \u20102 ]|\u12395 \u12421 \u12358 \u12365 \u12435 \\\\s*(?:\u12378 \u12415 |\u12377 \u12415 |\u23436 \u20102 |(?:\u12356 \u12383 )?\u12375 \u12414 \u12375 \u12383 ?)|\u12362 ?\u25391 (?:\u12426 )?\u36796 (?:\u12415 )?\\\\s*(?:\u28168 \u12415 ?|\u23436 \u20102 |(?:\u12356 \u12383 )?\u12375 \u12414 \u12375 \u12383 ?)|\u25391 \u36796 \\\\s*(?:\u28168 \u12415 ?|\u23436 \u20102 |(?:\u12356 \u12383 )?\u12375 \u12414 \u12375 \u12383 ?)|\u12405 \u12426 \u12371 \u12415 \\\\s*(?:\u12378 \u12415 |\u12377 \u12415 |\u23436 \u20102 |(?:\u12356 \u12383 )?\u12375 \u12414 \u12375 \u12383 ?)|\u12362 ?\u36865 \u37329 \\\\s*(?:\u28168 \u12415 ?|\u23436 \u20102 |(?:\u12356 \u12383 )?\u12375 \u12414 \u12375 \u12383 ?)|\u12381 \u12358 \u12365 \u12435 \\\\s*(?:\u12378 \u12415 |\u12377 \u12415 |\u23436 \u20102 |(?:\u12356 \u12383 )?\u12375 \u12414 \u12375 \u12383 ?)|\u12362 ?\u25903 \u25173 (?:\u12356 )?\\\\s*(?:\u28168 \u12415 ?|\u23436 \u20102 |(?:\u12356 \u12383 )?\u12375 \u12414 \u12375 \u12383 ?)|\u12362 ?\u25903 \u25173 \u12356 \\\\s*(?:\u28168 \u12415 ?|\u23436 \u20102 |(?:\u12356 \u12383 )?\u12375 \u12414 \u12375 \u12383 ?)|\u25903 \u25173 [\u28168 \u20102 ]|\u27770 \u28168 \\\\s*(?:\u23436 \u20102 |(?:\u12356 \u12383 )?\u12375 \u12414 \u12375 \u12383 ?))';\
const PAID_TEXT_RE = new RegExp('^\\\\s*[\uc0\u12300 \u12302 \u12317 \u65288 (\\\\[]?\\\\s*(?:' + PAID_CORE + ')\\\\s*[\u12301 \u12303 \u12319 \u65289 )\\\\]]?\\\\s*[\u12290 .!\u65281 \'85\u12316 \u12540 ]*\\\\s*$', 'i');\
const VAGUE_PAID_RE = /^(?:\uc0\u28168 \u12415 |\u12377 \u12415 |\u23436 \u20102 |\u12363 \u12435 \u12426 \u12423 \u12358 )[\u12290 .!\u65281 \'85\u12316 \u12540 ]?\\s*$/i;\
function isPaidMessage(text, \{ allowVague = false \} = \{\}) \{ if (!text) return false; if (PAID_TEXT_RE.test(text)) return true; return allowVague && VAGUE_PAID_RE.test(text); \}\
\
/* ===========================\
 *  Misc\
 * =========================== */\
function cardText(s)\{ return s; \}\
function setChoice(fs, newValue, jpLabel, jpValueText) \{\
  if (fs.value === newValue) return null;\
  let msg;\
  if (fs.isFirst) \{ msg = jpLabel === "\uc0\u12496 \u12522 \u12456 \u12540 \u12471 \u12519 \u12531 " ? `\u12300 $\{jpValueText\}\u12301 \u12364 \u36984 \u25246 \u12373 \u12428 \u12414 \u12375 \u12383 \u12290 ` : `$\{jpLabel\}\u12434 \u12300 $\{jpValueText\}\u12301 \u12364 \u36984 \u25246 \u12373 \u12428 \u12414 \u12375 \u12383 \u12290 `; fs.isFirst = false; \}\
  else \{ msg = jpLabel === "\uc0\u12496 \u12522 \u12456 \u12540 \u12471 \u12519 \u12531 " ? `\u12300 $\{jpValueText\}\u12301 \u12395 \u22793 \u26356 \u12375 \u12414 \u12375 \u12383 \u12290 ` : `$\{jpLabel\}\u12434 \u12300 $\{jpValueText\}\u12301 \u12395 \u22793 \u26356 \u12375 \u12414 \u12375 \u12383 \u12290 `; \}\
  fs.value = newValue; return msg;\
\}\
\
/* Vercel Body Size */\
export const config = \{ api: \{ bodyParser: \{ sizeLimit: "1mb" \} \} \};\
}